/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
/**
 * @module find-and-replace/findcommand
*/
import type { Item } from 'ckeditor5/src/engine';
import { Command, type Editor } from 'ckeditor5/src/core';
import type { Collection } from 'ckeditor5/src/utils';
import type FindAndReplaceState from './findandreplacestate';
import type { ResultType } from './findandreplace';
/**
 * The find command. It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.
 */
export default class FindCommand extends Command {
    /**
     * The find and replace state object used for command operations.
     */
    private _state;
    /**
     * Creates a new `FindCommand` instance.
     *
     * @param editor The editor on which this command will be used.
     * @param state An object to hold plugin state.
     */
    constructor(editor: Editor, state: FindAndReplaceState);
    /**
     * Executes the command.
     *
     * @param callbackOrText
     * @param options Options object.
     * @param options.matchCase If set to `true`, the letter case will be matched.
     * @param options.wholeWords If set to `true`, only whole words that match `callbackOrText` will be matched.
     *
     * @fires execute
     */
    execute(callbackOrText: string | (({ item, text }: {
        item: Item;
        text: string;
    }) => Array<ResultType>), { matchCase, wholeWords }?: {
        matchCase?: boolean;
        wholeWords?: boolean;
    }): {
        results: Collection<ResultType>;
        findCallback: (({ item, text }: {
            item: Item;
            text: string;
        }) => Array<ResultType>);
    };
}
